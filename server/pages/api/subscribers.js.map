{"version":3,"file":"pages/api/subscribers.js","mappings":"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","sources":["webpack://_N_E/?1ed2","webpack://_N_E/./pages/api/subscribers.ts","webpack://_N_E/./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/server/web/error.js","webpack://_N_E/./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/server/web/utils.js","webpack://_N_E/./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js","webpack://_N_E/./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js","webpack://_N_E/./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js","webpack://_N_E/./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js","webpack://_N_E/./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js","webpack://_N_E/./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js","webpack://_N_E/./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js","webpack://_N_E/./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js","webpack://_N_E/./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js","webpack://_N_E/./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/shared/lib/get-hostname.js","webpack://_N_E/./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js","webpack://_N_E/./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js","webpack://_N_E/./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js","webpack://_N_E/./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/server/web/next-url.js","webpack://_N_E/./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/server/web/spec-extension/cookies/serialize.js","webpack://_N_E/./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/server/web/spec-extension/cookies/request-cookies.js","webpack://_N_E/./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/server/web/spec-extension/cookies/response-cookies.js","webpack://_N_E/./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/server/web/spec-extension/cookies/index.js","webpack://_N_E/./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/server/web/spec-extension/request.js","webpack://_N_E/./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/server/web/spec-extension/response.js","webpack://_N_E/./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js","webpack://_N_E/./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/server/internal-utils.js","webpack://_N_E/./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js","webpack://_N_E/./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/server/web/adapter.js","webpack://_N_E/<anon>"],"sourcesContent":["\n        import { adapter, enhanceGlobals } from 'next/dist/esm/server/web/adapter'\n\n        enhanceGlobals()\n\n        var mod = require(\"private-next-pages/api/subscribers.ts\")\n        var handler = mod.middleware || mod.default;\n\n        if (typeof handler !== 'function') {\n          throw new Error('The Edge Function \"pages/api/subscribers\" must export a `default` function');\n        }\n\n        export default function (opts) {\n          return adapter({\n              ...opts,\n              page: \"/api/subscribers\",\n              handler,\n          })\n        }\n    ","import { type NextRequest } from 'next/server';\n\nexport const config = {\n  runtime: 'experimental-edge'\n};\n\nexport default async function handler(req: NextRequest) {\n  const result = await fetch('https://www.getrevue.co/api/v2/subscribers', {\n    method: 'GET',\n    headers: {\n      Authorization: `Token ${process.env.REVUE_API_KEY}`\n    }\n  });\n\n  const data = await result.json();\n\n  if (!result.ok) {\n    return new Response(\n      JSON.stringify({ error: 'Error retrieving subscribers' }),\n      {\n        status: 500,\n        headers: {\n          'content-type': 'application/json'\n        }\n      }\n    );\n  }\n\n  return new Response(JSON.stringify({ count: data.length }), {\n    status: 200,\n    headers: {\n      'content-type': 'application/json',\n      'cache-control': 'public, s-maxage=1200, stale-while-revalidate=600'\n    }\n  });\n}\n","export class PageSignatureError extends Error {\n    constructor({ page  }){\n        super(`The middleware \"${page}\" accepts an async API directly with the form:\n  \n  export function middleware(request, event) {\n    return NextResponse.redirect('/new-location')\n  }\n  \n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  `);\n    }\n}\nexport class RemovedPageError extends Error {\n    constructor(){\n        super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  `);\n    }\n}\nexport class RemovedUAError extends Error {\n    constructor(){\n        super(`The request.ua has been removed in favour of \\`userAgent\\` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  `);\n    }\n}\n\n//# sourceMappingURL=error.js.map","export function fromNodeHeaders(object) {\n    const headers = new Headers();\n    for (let [key, value] of Object.entries(object)){\n        const values = Array.isArray(value) ? value : [\n            value\n        ];\n        for (let v of values){\n            if (v !== undefined) {\n                headers.append(key, v);\n            }\n        }\n    }\n    return headers;\n}\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/ export function splitCookiesString(cookiesString) {\n    var cookiesStrings = [];\n    var pos = 0;\n    var start;\n    var ch;\n    var lastComma;\n    var nextStart;\n    var cookiesSeparatorFound;\n    function skipWhitespace() {\n        while(pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))){\n            pos += 1;\n        }\n        return pos < cookiesString.length;\n    }\n    function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n    }\n    while(pos < cookiesString.length){\n        start = pos;\n        cookiesSeparatorFound = false;\n        while(skipWhitespace()){\n            ch = cookiesString.charAt(pos);\n            if (ch === \",\") {\n                // ',' is a cookie separator if we have later first '=', not ';' or ','\n                lastComma = pos;\n                pos += 1;\n                skipWhitespace();\n                nextStart = pos;\n                while(pos < cookiesString.length && notSpecialChar()){\n                    pos += 1;\n                }\n                // currently special character\n                if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n                    // we found cookies separator\n                    cookiesSeparatorFound = true;\n                    // pos is inside the next cookie, so back up and return it.\n                    pos = nextStart;\n                    cookiesStrings.push(cookiesString.substring(start, lastComma));\n                    start = pos;\n                } else {\n                    // in param ',' or param separator ';',\n                    // we continue from that comma\n                    pos = lastComma + 1;\n                }\n            } else {\n                pos += 1;\n            }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n            cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n    }\n    return cookiesStrings;\n}\nexport function toNodeHeaders(headers) {\n    const result = {};\n    if (headers) {\n        for (const [key, value] of headers.entries()){\n            result[key] = value;\n            if (key.toLowerCase() === \"set-cookie\") {\n                result[key] = splitCookiesString(value);\n            }\n        }\n    }\n    return result;\n}\n/**\n * Validate the correctness of a user-provided URL.\n */ export function validateURL(url) {\n    try {\n        return String(new URL(String(url)));\n    } catch (error) {\n        throw new Error(`URL is malformed \"${String(url)}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`, {\n            cause: error\n        });\n    }\n}\n\n//# sourceMappingURL=utils.js.map","import { PageSignatureError } from \"../error\";\nconst responseSymbol = Symbol(\"response\");\nconst passThroughSymbol = Symbol(\"passThrough\");\nexport const waitUntilSymbol = Symbol(\"waitUntil\");\nclass FetchEvent {\n    [waitUntilSymbol] = [];\n    [passThroughSymbol] = false;\n    // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n    constructor(_request){}\n    respondWith(response) {\n        if (!this[responseSymbol]) {\n            this[responseSymbol] = Promise.resolve(response);\n        }\n    }\n    passThroughOnException() {\n        this[passThroughSymbol] = true;\n    }\n    waitUntil(promise) {\n        this[waitUntilSymbol].push(promise);\n    }\n}\nexport class NextFetchEvent extends FetchEvent {\n    constructor(params){\n        super(params.request);\n        this.sourcePage = params.page;\n    }\n    /**\n   * @deprecated The `request` is now the first parameter and the API is now async.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ get request() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    /**\n   * @deprecated Using `respondWith` is no longer needed.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ respondWith() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n}\n\n//# sourceMappingURL=fetch-event.js.map","export function detectDomainLocale(domainItems, hostname, detectedLocale) {\n    let domainItem;\n    if (domainItems) {\n        if (detectedLocale) {\n            detectedLocale = detectedLocale.toLowerCase();\n        }\n        for (const item of domainItems){\n            var ref, ref1;\n            // remove port if present\n            const domainHostname = (ref = item.domain) == null ? void 0 : ref.split(':')[0].toLowerCase();\n            if (hostname === domainHostname || detectedLocale === item.defaultLocale.toLowerCase() || ((ref1 = item.locales) == null ? void 0 : ref1.some((locale)=>locale.toLowerCase() === detectedLocale))) {\n                domainItem = item;\n                break;\n            }\n        }\n    }\n    return domainItem;\n}\n\n//# sourceMappingURL=detect-domain-locale.js.map","/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */ export function removeTrailingSlash(route) {\n    return route.replace(/\\/$/, '') || '/';\n}\n\n//# sourceMappingURL=remove-trailing-slash.js.map","/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */ export function parsePath(path) {\n    const hashIndex = path.indexOf('#');\n    const queryIndex = path.indexOf('?');\n    const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex);\n    if (hasQuery || hashIndex > -1) {\n        return {\n            pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n            query: hasQuery ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined) : '',\n            hash: hashIndex > -1 ? path.slice(hashIndex) : ''\n        };\n    }\n    return {\n        pathname: path,\n        query: '',\n        hash: ''\n    };\n}\n\n//# sourceMappingURL=parse-path.js.map","import { parsePath } from './parse-path';\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */ export function addPathPrefix(path, prefix) {\n    if (!path.startsWith('/') || !prefix) {\n        return path;\n    }\n    const { pathname , query , hash  } = parsePath(path);\n    return `${prefix}${pathname}${query}${hash}`;\n}\n\n//# sourceMappingURL=add-path-prefix.js.map","import { parsePath } from './parse-path';\n/**\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\n * provided path. It also works only for paths ensuring the argument starts\n * with a slash.\n */ export function addPathSuffix(path, suffix) {\n    if (!path.startsWith('/') || !suffix) {\n        return path;\n    }\n    const { pathname , query , hash  } = parsePath(path);\n    return `${pathname}${suffix}${query}${hash}`;\n}\n\n//# sourceMappingURL=add-path-suffix.js.map","import { parsePath } from './parse-path';\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */ export function pathHasPrefix(path, prefix) {\n    if (typeof path !== 'string') {\n        return false;\n    }\n    const { pathname  } = parsePath(path);\n    return pathname === prefix || pathname.startsWith(prefix + '/');\n}\n\n//# sourceMappingURL=path-has-prefix.js.map","import { addPathPrefix } from './add-path-prefix';\nimport { pathHasPrefix } from './path-has-prefix';\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */ export function addLocale(path, locale, defaultLocale, ignorePrefix) {\n    if (locale && locale !== defaultLocale && (ignorePrefix || !pathHasPrefix(path.toLowerCase(), `/${locale.toLowerCase()}`) && !pathHasPrefix(path.toLowerCase(), '/api'))) {\n        return addPathPrefix(path, `/${locale}`);\n    }\n    return path;\n}\n\n//# sourceMappingURL=add-locale.js.map","import { removeTrailingSlash } from './remove-trailing-slash';\nimport { addPathPrefix } from './add-path-prefix';\nimport { addPathSuffix } from './add-path-suffix';\nimport { addLocale } from './add-locale';\nexport function formatNextPathnameInfo(info) {\n    let pathname = addLocale(info.pathname, info.locale, info.buildId ? undefined : info.defaultLocale, info.ignorePrefix);\n    if (info.buildId || !info.trailingSlash) {\n        pathname = removeTrailingSlash(pathname);\n    }\n    if (info.buildId) {\n        pathname = addPathSuffix(addPathPrefix(pathname, `/_next/data/${info.buildId}`), info.pathname === '/' ? 'index.json' : '.json');\n    }\n    pathname = addPathPrefix(pathname, info.basePath);\n    return !info.buildId && info.trailingSlash ? !pathname.endsWith('/') ? addPathSuffix(pathname, '/') : pathname : removeTrailingSlash(pathname);\n}\n\n//# sourceMappingURL=format-next-pathname-info.js.map","/**\n * Takes an object with a hostname property (like a parsed URL) and some\n * headers that may contain Host and returns the preferred hostname.\n * @param parsed An object containing a hostname property.\n * @param headers A dictionary with headers containing a `host`.\n */ export function getHostname(parsed, headers) {\n    var ref;\n    return (ref = !Array.isArray(headers == null ? void 0 : headers.host) && (headers == null ? void 0 : headers.host) || parsed.hostname) == null ? void 0 : ref.split(':')[0].toLowerCase();\n}\n\n//# sourceMappingURL=get-hostname.js.map","/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */ export function normalizeLocalePath(pathname, locales) {\n    let detectedLocale;\n    // first item will be empty string from splitting at first char\n    const pathnameParts = pathname.split('/');\n    (locales || []).some((locale)=>{\n        if (pathnameParts[1] && pathnameParts[1].toLowerCase() === locale.toLowerCase()) {\n            detectedLocale = locale;\n            pathnameParts.splice(1, 1);\n            pathname = pathnameParts.join('/') || '/';\n            return true;\n        }\n        return false;\n    });\n    return {\n        pathname,\n        detectedLocale\n    };\n}\n\n//# sourceMappingURL=normalize-locale-path.js.map","import { pathHasPrefix } from './path-has-prefix';\n/**\n * Given a path and a prefix it will remove the prefix when it exists in the\n * given path. It ensures it matches exactly without containing extra chars\n * and if the prefix is not there it will be noop.\n * @param path The path to remove the prefix from.\n * @param prefix The prefix to be removed.\n */ export function removePathPrefix(path, prefix) {\n    if (pathHasPrefix(path, prefix)) {\n        const withoutPrefix = path.slice(prefix.length);\n        return withoutPrefix.startsWith('/') ? withoutPrefix : `/${withoutPrefix}`;\n    }\n    return path;\n}\n\n//# sourceMappingURL=remove-path-prefix.js.map","import { normalizeLocalePath } from '../../i18n/normalize-locale-path';\nimport { removePathPrefix } from './remove-path-prefix';\nimport { pathHasPrefix } from './path-has-prefix';\nexport function getNextPathnameInfo(pathname, options) {\n    var _nextConfig;\n    const { basePath , i18n , trailingSlash  } = (_nextConfig = options.nextConfig) != null ? _nextConfig : {};\n    const info = {\n        pathname: pathname,\n        trailingSlash: pathname !== '/' ? pathname.endsWith('/') : trailingSlash\n    };\n    if (basePath && pathHasPrefix(info.pathname, basePath)) {\n        info.pathname = removePathPrefix(info.pathname, basePath);\n        info.basePath = basePath;\n    }\n    if (options.parseData === true && info.pathname.startsWith('/_next/data/') && info.pathname.endsWith('.json')) {\n        const paths = info.pathname.replace(/^\\/_next\\/data\\//, '').replace(/\\.json$/, '').split('/');\n        const buildId = paths[0];\n        info.pathname = paths[1] !== 'index' ? `/${paths.slice(1).join('/')}` : '/';\n        info.buildId = buildId;\n    }\n    if (i18n) {\n        const pathLocale = normalizeLocalePath(info.pathname, i18n.locales);\n        info.locale = pathLocale == null ? void 0 : pathLocale.detectedLocale;\n        info.pathname = (pathLocale == null ? void 0 : pathLocale.pathname) || info.pathname;\n    }\n    return info;\n}\n\n//# sourceMappingURL=get-next-pathname-info.js.map","import { detectDomainLocale } from \"../../shared/lib/i18n/detect-domain-locale\";\nimport { formatNextPathnameInfo } from \"../../shared/lib/router/utils/format-next-pathname-info\";\nimport { getHostname } from \"../../shared/lib/get-hostname\";\nimport { getNextPathnameInfo } from \"../../shared/lib/router/utils/get-next-pathname-info\";\nconst REGEX_LOCALHOST_HOSTNAME = /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|::1|localhost)/;\nfunction parseURL(url, base) {\n    return new URL(String(url).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"), base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"));\n}\nconst Internal = Symbol(\"NextURLInternal\");\nexport class NextURL {\n    constructor(input, baseOrOpts, opts){\n        let base;\n        let options;\n        if (typeof baseOrOpts === \"object\" && \"pathname\" in baseOrOpts || typeof baseOrOpts === \"string\") {\n            base = baseOrOpts;\n            options = opts || {};\n        } else {\n            options = opts || baseOrOpts || {};\n        }\n        this[Internal] = {\n            url: parseURL(input, base ?? options.base),\n            options: options,\n            basePath: \"\"\n        };\n        this.analyzeUrl();\n    }\n    analyzeUrl() {\n        var ref, ref1, ref2, ref3, ref4;\n        const pathnameInfo = getNextPathnameInfo(this[Internal].url.pathname, {\n            nextConfig: this[Internal].options.nextConfig,\n            parseData: !process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE\n        });\n        this[Internal].domainLocale = detectDomainLocale((ref = this[Internal].options.nextConfig) == null ? void 0 : (ref1 = ref.i18n) == null ? void 0 : ref1.domains, getHostname(this[Internal].url, this[Internal].options.headers));\n        const defaultLocale = ((ref2 = this[Internal].domainLocale) == null ? void 0 : ref2.defaultLocale) || ((ref3 = this[Internal].options.nextConfig) == null ? void 0 : (ref4 = ref3.i18n) == null ? void 0 : ref4.defaultLocale);\n        this[Internal].url.pathname = pathnameInfo.pathname;\n        this[Internal].defaultLocale = defaultLocale;\n        this[Internal].basePath = pathnameInfo.basePath ?? \"\";\n        this[Internal].buildId = pathnameInfo.buildId;\n        this[Internal].locale = pathnameInfo.locale ?? defaultLocale;\n        this[Internal].trailingSlash = pathnameInfo.trailingSlash;\n    }\n    formatPathname() {\n        return formatNextPathnameInfo({\n            basePath: this[Internal].basePath,\n            buildId: this[Internal].buildId,\n            defaultLocale: !this[Internal].options.forceLocale ? this[Internal].defaultLocale : undefined,\n            locale: this[Internal].locale,\n            pathname: this[Internal].url.pathname,\n            trailingSlash: this[Internal].trailingSlash\n        });\n    }\n    formatSearch() {\n        return this[Internal].url.search;\n    }\n    get buildId() {\n        return this[Internal].buildId;\n    }\n    set buildId(buildId) {\n        this[Internal].buildId = buildId;\n    }\n    get locale() {\n        return this[Internal].locale ?? \"\";\n    }\n    set locale(locale) {\n        var ref, ref5;\n        if (!this[Internal].locale || !((ref = this[Internal].options.nextConfig) == null ? void 0 : (ref5 = ref.i18n) == null ? void 0 : ref5.locales.includes(locale))) {\n            throw new TypeError(`The NextURL configuration includes no locale \"${locale}\"`);\n        }\n        this[Internal].locale = locale;\n    }\n    get defaultLocale() {\n        return this[Internal].defaultLocale;\n    }\n    get domainLocale() {\n        return this[Internal].domainLocale;\n    }\n    get searchParams() {\n        return this[Internal].url.searchParams;\n    }\n    get host() {\n        return this[Internal].url.host;\n    }\n    set host(value) {\n        this[Internal].url.host = value;\n    }\n    get hostname() {\n        return this[Internal].url.hostname;\n    }\n    set hostname(value) {\n        this[Internal].url.hostname = value;\n    }\n    get port() {\n        return this[Internal].url.port;\n    }\n    set port(value) {\n        this[Internal].url.port = value;\n    }\n    get protocol() {\n        return this[Internal].url.protocol;\n    }\n    set protocol(value) {\n        this[Internal].url.protocol = value;\n    }\n    get href() {\n        const pathname = this.formatPathname();\n        const search = this.formatSearch();\n        return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`;\n    }\n    set href(url) {\n        this[Internal].url = parseURL(url);\n        this.analyzeUrl();\n    }\n    get origin() {\n        return this[Internal].url.origin;\n    }\n    get pathname() {\n        return this[Internal].url.pathname;\n    }\n    set pathname(value) {\n        this[Internal].url.pathname = value;\n    }\n    get hash() {\n        return this[Internal].url.hash;\n    }\n    set hash(value) {\n        this[Internal].url.hash = value;\n    }\n    get search() {\n        return this[Internal].url.search;\n    }\n    set search(value) {\n        this[Internal].url.search = value;\n    }\n    get password() {\n        return this[Internal].url.password;\n    }\n    set password(value) {\n        this[Internal].url.password = value;\n    }\n    get username() {\n        return this[Internal].url.username;\n    }\n    set username(value) {\n        this[Internal].url.username = value;\n    }\n    get basePath() {\n        return this[Internal].basePath;\n    }\n    set basePath(value) {\n        this[Internal].basePath = value.startsWith(\"/\") ? value : `/${value}`;\n    }\n    toString() {\n        return this.href;\n    }\n    toJSON() {\n        return this.href;\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            href: this.href,\n            origin: this.origin,\n            protocol: this.protocol,\n            username: this.username,\n            password: this.password,\n            host: this.host,\n            hostname: this.hostname,\n            port: this.port,\n            pathname: this.pathname,\n            search: this.search,\n            searchParams: this.searchParams,\n            hash: this.hash\n        };\n    }\n    clone() {\n        return new NextURL(String(this), this[Internal].options);\n    }\n}\n\n//# sourceMappingURL=next-url.js.map","const SAME_SITE = [\n    \"strict\",\n    \"lax\",\n    \"none\"\n];\nfunction parseSameSite(string) {\n    string = string.toLowerCase();\n    return SAME_SITE.includes(string) ? string : undefined;\n}\nfunction compact(t) {\n    const newT = {};\n    for(const key in t){\n        if (t[key]) {\n            newT[key] = t[key];\n        }\n    }\n    return newT;\n}\nexport function serialize(c) {\n    const attrs = [\n        \"path\" in c && c.path && `Path=${c.path}`,\n        \"expires\" in c && c.expires && `Expires=${c.expires.toUTCString()}`,\n        \"maxAge\" in c && c.maxAge && `Max-Age=${c.maxAge}`,\n        \"domain\" in c && c.domain && `Domain=${c.domain}`,\n        \"secure\" in c && c.secure && \"Secure\",\n        \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n        \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`, \n    ].filter(Boolean);\n    return `${c.name}=${encodeURIComponent(c.value ?? \"\")}; ${attrs.join(\"; \")}`;\n}\n/**\n * Parse a `Cookie` or `Set-Cookie header value\n */ export function parseCookieString(cookie) {\n    const map = new Map();\n    for (const pair of cookie.split(/; */)){\n        if (!pair) continue;\n        const [key, value] = pair.split(\"=\", 2);\n        map.set(key, decodeURIComponent(value ?? \"true\"));\n    }\n    return map;\n}\n/**\n * Parse a `Set-Cookie` header value\n */ export function parseSetCookieString(setCookie) {\n    if (!setCookie) {\n        return undefined;\n    }\n    const [[name, value], ...attributes] = parseCookieString(setCookie);\n    const { domain , expires , httponly , maxage , path , samesite , secure  } = Object.fromEntries(attributes.map(([key, v])=>[\n            key.toLowerCase(),\n            v\n        ]));\n    const cookie = {\n        name,\n        value: decodeURIComponent(value),\n        domain,\n        ...expires && {\n            expires: new Date(expires)\n        },\n        ...httponly && {\n            httpOnly: true\n        },\n        ...typeof maxage === \"string\" && {\n            maxAge: Number(maxage)\n        },\n        path,\n        ...samesite && {\n            sameSite: parseSameSite(samesite)\n        },\n        ...secure && {\n            secure: true\n        }\n    };\n    return compact(cookie);\n}\n\n//# sourceMappingURL=serialize.js.map","import { parseCookieString, serialize } from \"./serialize\";\n/**\n * A class for manipulating {@link Request} cookies (`Cookie` header).\n */ export class RequestCookies {\n    _parsed = new Map();\n    constructor(requestHeaders){\n        this._headers = requestHeaders;\n        const header = requestHeaders.get(\"cookie\");\n        if (header) {\n            const parsed = parseCookieString(header);\n            for (const [name, value] of parsed){\n                this._parsed.set(name, {\n                    name,\n                    value\n                });\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this._parsed[Symbol.iterator]();\n    }\n    /**\n   * The amount of cookies received from the client\n   */ get size() {\n        return this._parsed.size;\n    }\n    get(...args) {\n        const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n        return this._parsed.get(name);\n    }\n    getAll(...args) {\n        var ref;\n        const all = Array.from(this._parsed);\n        if (!args.length) {\n            return all.map(([_, value])=>value);\n        }\n        const name = typeof args[0] === \"string\" ? args[0] : (ref = args[0]) == null ? void 0 : ref.name;\n        return all.filter(([n])=>n === name).map(([_, value])=>value);\n    }\n    has(name) {\n        return this._parsed.has(name);\n    }\n    set(...args) {\n        const [name, value] = args.length === 1 ? [\n            args[0].name,\n            args[0].value\n        ] : args;\n        const map = this._parsed;\n        map.set(name, {\n            name,\n            value\n        });\n        this._headers.set(\"cookie\", Array.from(map).map(([_, v])=>serialize(v)).join(\"; \"));\n        return this;\n    }\n    /**\n   * Delete the cookies matching the passed name or names in the request.\n   */ delete(/** Name or names of the cookies to be deleted  */ names) {\n        const map = this._parsed;\n        const result = !Array.isArray(names) ? map.delete(names) : names.map((name)=>map.delete(name));\n        this._headers.set(\"cookie\", Array.from(map).map(([_, value])=>serialize(value)).join(\"; \"));\n        return result;\n    }\n    /**\n   * Delete all the cookies in the cookies in the request.\n   */ clear() {\n        this.delete(Array.from(this._parsed.keys()));\n        return this;\n    }\n    /**\n   * Format the cookies in the request as a string for logging\n   */ [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n    }\n}\n\n//# sourceMappingURL=request-cookies.js.map","import { parseSetCookieString, serialize } from \"./serialize\";\nfunction replace(bag, headers) {\n    headers.delete(\"set-cookie\");\n    for (const [, value] of bag){\n        const serialized = serialize(value);\n        headers.append(\"set-cookie\", serialized);\n    }\n}\nfunction normalizeCookie(cookie = {\n    name: \"\",\n    value: \"\"\n}) {\n    if (cookie.maxAge) {\n        cookie.expires = new Date(Date.now() + cookie.maxAge * 1000);\n    }\n    if (cookie.path === null || cookie.path === undefined) {\n        cookie.path = \"/\";\n    }\n    return cookie;\n}\n/**\n * A class for manipulating {@link Response} cookies (`Set-Cookie` header).\n * Loose implementation of the experimental [Cookie Store API](https://wicg.github.io/cookie-store/#dictdef-cookie)\n * The main difference is `ResponseCookies` methods do not return a Promise.\n */ export class ResponseCookies {\n    _parsed = new Map();\n    constructor(responseHeaders){\n        this._headers = responseHeaders;\n        // @ts-expect-error See https://github.com/whatwg/fetch/issues/973\n        const headers = this._headers.getAll(\"set-cookie\");\n        for (const header of headers){\n            const parsed = parseSetCookieString(header);\n            if (parsed) {\n                this._parsed.set(parsed.name, parsed);\n            }\n        }\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-get CookieStore#get} without the Promise.\n   */ get(...args) {\n        const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n        return this._parsed.get(key);\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-getAll CookieStore#getAll} without the Promise.\n   */ getAll(...args) {\n        var ref;\n        const all = Array.from(this._parsed.values());\n        if (!args.length) {\n            return all;\n        }\n        const key = typeof args[0] === \"string\" ? args[0] : (ref = args[0]) == null ? void 0 : ref.name;\n        return all.filter((c)=>c.name === key);\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-set CookieStore#set} without the Promise.\n   */ set(...args) {\n        const [name, value, cookie] = args.length === 1 ? [\n            args[0].name,\n            args[0].value,\n            args[0]\n        ] : args;\n        const map = this._parsed;\n        map.set(name, normalizeCookie({\n            name,\n            value,\n            ...cookie\n        }));\n        replace(map, this._headers);\n        return this;\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-delete CookieStore#delete} without the Promise.\n   */ delete(...args) {\n        const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n        return this.set({\n            name,\n            value: \"\",\n            expires: new Date(0)\n        });\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n    }\n}\n\n//# sourceMappingURL=response-cookies.js.map","export { RequestCookies } from \"./request-cookies\";\nexport { ResponseCookies } from \"./response-cookies\";\n\n//# sourceMappingURL=index.js.map","import { NextURL } from \"../next-url\";\nimport { toNodeHeaders, validateURL } from \"../utils\";\nimport { RemovedUAError, RemovedPageError } from \"../error\";\nimport { RequestCookies } from \"./cookies\";\nexport const INTERNALS = Symbol(\"internal request\");\nexport class NextRequest extends Request {\n    constructor(input, init = {}){\n        const url = typeof input !== \"string\" && \"url\" in input ? input.url : String(input);\n        validateURL(url);\n        super(url, init);\n        this[INTERNALS] = {\n            cookies: new RequestCookies(this.headers),\n            geo: init.geo || {},\n            ip: init.ip,\n            url: new NextURL(url, {\n                headers: toNodeHeaders(this.headers),\n                nextConfig: init.nextConfig\n            })\n        };\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            cookies: this.cookies,\n            geo: this.geo,\n            ip: this.ip,\n            nextUrl: this.nextUrl,\n            url: this.url,\n            // rest of props come from Request\n            bodyUsed: this.bodyUsed,\n            cache: this.cache,\n            credentials: this.credentials,\n            destination: this.destination,\n            headers: Object.fromEntries(this.headers),\n            integrity: this.integrity,\n            keepalive: this.keepalive,\n            method: this.method,\n            mode: this.mode,\n            redirect: this.redirect,\n            referrer: this.referrer,\n            referrerPolicy: this.referrerPolicy,\n            signal: this.signal\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    get geo() {\n        return this[INTERNALS].geo;\n    }\n    get ip() {\n        return this[INTERNALS].ip;\n    }\n    get nextUrl() {\n        return this[INTERNALS].url;\n    }\n    /**\n   * @deprecated\n   * `page` has been deprecated in favour of `URLPattern`.\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\n   */ get page() {\n        throw new RemovedPageError();\n    }\n    /**\n   * @deprecated\n   * `ua` has been removed in favour of \\`userAgent\\` function.\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n   */ get ua() {\n        throw new RemovedUAError();\n    }\n    get url() {\n        return this[INTERNALS].url.toString();\n    }\n}\n\n//# sourceMappingURL=request.js.map","import { NextURL } from \"../next-url\";\nimport { toNodeHeaders, validateURL } from \"../utils\";\nimport { ResponseCookies } from \"./cookies\";\nconst INTERNALS = Symbol(\"internal response\");\nconst REDIRECTS = new Set([\n    301,\n    302,\n    303,\n    307,\n    308\n]);\nfunction handleMiddlewareField(init, headers) {\n    var ref;\n    if (init == null ? void 0 : (ref = init.request) == null ? void 0 : ref.headers) {\n        if (!(init.request.headers instanceof Headers)) {\n            throw new Error(\"request.headers must be an instance of Headers\");\n        }\n        const keys = [];\n        for (const [key, value] of init.request.headers){\n            headers.set(\"x-middleware-request-\" + key, value);\n            keys.push(key);\n        }\n        headers.set(\"x-middleware-override-headers\", keys.join(\",\"));\n    }\n}\nexport class NextResponse extends Response {\n    constructor(body, init = {}){\n        super(body, init);\n        this[INTERNALS] = {\n            cookies: new ResponseCookies(this.headers),\n            url: init.url ? new NextURL(init.url, {\n                headers: toNodeHeaders(this.headers),\n                nextConfig: init.nextConfig\n            }) : undefined\n        };\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            cookies: this.cookies,\n            url: this.url,\n            // rest of props come from Response\n            body: this.body,\n            bodyUsed: this.bodyUsed,\n            headers: Object.fromEntries(this.headers),\n            ok: this.ok,\n            redirected: this.redirected,\n            status: this.status,\n            statusText: this.statusText,\n            type: this.type\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    static json(body, init) {\n        // @ts-expect-error This is not in lib/dom right now, and we can't augment it.\n        const response = Response.json(body, init);\n        return new NextResponse(response.body, response);\n    }\n    static redirect(url, init) {\n        const status = typeof init === \"number\" ? init : (init == null ? void 0 : init.status) ?? 307;\n        if (!REDIRECTS.has(status)) {\n            throw new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n        }\n        const initObj = typeof init === \"object\" ? init : {};\n        const headers = new Headers(initObj == null ? void 0 : initObj.headers);\n        headers.set(\"Location\", validateURL(url));\n        return new NextResponse(null, {\n            ...initObj,\n            headers,\n            status\n        });\n    }\n    static rewrite(destination, init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-rewrite\", validateURL(destination));\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n    static next(init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-next\", \"1\");\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n}\n\n//# sourceMappingURL=response.js.map","/**\n * Given a URL as a string and a base URL it will make the URL relative\n * if the parsed protocol and host is the same as the one in the base\n * URL. Otherwise it returns the same URL string.\n */ export function relativizeURL(url, base) {\n    const baseURL = typeof base === 'string' ? new URL(base) : base;\n    const relative = new URL(url, base);\n    const origin = `${baseURL.protocol}//${baseURL.host}`;\n    return `${relative.protocol}//${relative.host}` === origin ? relative.toString().replace(origin, '') : relative.toString();\n}\n\n//# sourceMappingURL=relativize-url.js.map","const INTERNAL_QUERY_NAMES = [\n    \"__nextFallback\",\n    \"__nextLocale\",\n    \"__nextDefaultLocale\",\n    \"__nextIsNotFound\",\n    // RSC\n    \"__rsc__\",\n    // Routing\n    \"__next_router_state_tree__\",\n    \"__next_router_prefetch__\", \n];\nconst EXTENDED_INTERNAL_QUERY_NAMES = [\n    \"__nextDataReq\"\n];\nexport function stripInternalQueries(query) {\n    for (const name of INTERNAL_QUERY_NAMES){\n        delete query[name];\n    }\n}\nexport function stripInternalSearchParams(searchParams, extended) {\n    for (const name of INTERNAL_QUERY_NAMES){\n        searchParams.delete(name);\n    }\n    if (extended) {\n        for (const name of EXTENDED_INTERNAL_QUERY_NAMES){\n            searchParams.delete(name);\n        }\n    }\n    return searchParams;\n}\n\n//# sourceMappingURL=internal-utils.js.map","// remove (name) from pathname as it's not considered for routing\nexport function normalizeAppPath(pathname) {\n    return pathname.split('/').reduce((acc, segment, index, segments)=>{\n        // Empty segments are ignored.\n        if (!segment) {\n            return acc;\n        }\n        if (segment.startsWith('(') && segment.endsWith(')')) {\n            return acc;\n        }\n        if (segment.startsWith('@')) {\n            return acc;\n        }\n        if (segment === 'page' && index === segments.length - 1) {\n            return acc;\n        }\n        return acc + `/${segment}`;\n    }, '');\n}\nexport function normalizeRscPath(pathname, enabled) {\n    return enabled ? pathname.replace(/\\.rsc($|\\?)/, '') : pathname;\n}\n\n//# sourceMappingURL=app-paths.js.map","import { PageSignatureError } from \"./error\";\nimport { fromNodeHeaders } from \"./utils\";\nimport { NextFetchEvent } from \"./spec-extension/fetch-event\";\nimport { NextRequest } from \"./spec-extension/request\";\nimport { NextResponse } from \"./spec-extension/response\";\nimport { relativizeURL } from \"../../shared/lib/router/utils/relativize-url\";\nimport { waitUntilSymbol } from \"./spec-extension/fetch-event\";\nimport { NextURL } from \"./next-url\";\nimport { stripInternalSearchParams } from \"../internal-utils\";\nimport { normalizeRscPath } from \"../../shared/lib/router/utils/app-paths\";\nclass NextRequestHint extends NextRequest {\n    constructor(params){\n        super(params.input, params.init);\n        this.sourcePage = params.page;\n    }\n    get request() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    respondWith() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    waitUntil() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n}\nconst FLIGHT_PARAMETERS = [\n    \"__rsc__\",\n    \"__next_router_state_tree__\",\n    \"__next_router_prefetch__\", \n];\nexport async function adapter(params) {\n    // TODO-APP: use explicit marker for this\n    const isEdgeRendering = typeof self.__BUILD_MANIFEST !== \"undefined\";\n    params.request.url = normalizeRscPath(params.request.url, true);\n    const requestUrl = new NextURL(params.request.url, {\n        headers: params.request.headers,\n        nextConfig: params.request.nextConfig\n    });\n    // Ensure users only see page requests, never data requests.\n    const buildId = requestUrl.buildId;\n    requestUrl.buildId = \"\";\n    const isDataReq = params.request.headers[\"x-nextjs-data\"];\n    if (isDataReq && requestUrl.pathname === \"/index\") {\n        requestUrl.pathname = \"/\";\n    }\n    const requestHeaders = fromNodeHeaders(params.request.headers);\n    // Parameters should only be stripped for middleware\n    if (!isEdgeRendering) {\n        for (const param of FLIGHT_PARAMETERS){\n            requestHeaders.delete(param);\n        }\n    }\n    // Strip internal query parameters off the request.\n    stripInternalSearchParams(requestUrl.searchParams, true);\n    const request = new NextRequestHint({\n        page: params.page,\n        input: String(requestUrl),\n        init: {\n            body: params.request.body,\n            geo: params.request.geo,\n            headers: requestHeaders,\n            ip: params.request.ip,\n            method: params.request.method,\n            nextConfig: params.request.nextConfig\n        }\n    });\n    /**\n   * This allows to identify the request as a data request. The user doesn't\n   * need to know about this property neither use it. We add it for testing\n   * purposes.\n   */ if (isDataReq) {\n        Object.defineProperty(request, \"__isData\", {\n            enumerable: false,\n            value: true\n        });\n    }\n    const event = new NextFetchEvent({\n        request,\n        page: params.page\n    });\n    let response = await params.handler(request, event);\n    // check if response is a Response object\n    if (response && !(response instanceof Response)) {\n        throw new TypeError(\"Expected an instance of Response to be returned\");\n    }\n    /**\n   * For rewrites we must always include the locale in the final pathname\n   * so we re-create the NextURL forcing it to include it when the it is\n   * an internal rewrite. Also we make sure the outgoing rewrite URL is\n   * a data URL if the request was a data request.\n   */ const rewrite = response == null ? void 0 : response.headers.get(\"x-middleware-rewrite\");\n    if (response && rewrite) {\n        const rewriteUrl = new NextURL(rewrite, {\n            forceLocale: true,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE) {\n            if (rewriteUrl.host === request.nextUrl.host) {\n                rewriteUrl.buildId = buildId || rewriteUrl.buildId;\n                response.headers.set(\"x-middleware-rewrite\", String(rewriteUrl));\n            }\n        }\n        /**\n     * When the request is a data request we must show if there was a rewrite\n     * with an internal header so the client knows which component to load\n     * from the data request.\n     */ if (isDataReq) {\n            response.headers.set(\"x-nextjs-rewrite\", relativizeURL(String(rewriteUrl), String(requestUrl)));\n        }\n    }\n    /**\n   * For redirects we will not include the locale in case when it is the\n   * default and we must also make sure the outgoing URL is a data one if\n   * the incoming request was a data request.\n   */ const redirect = response == null ? void 0 : response.headers.get(\"Location\");\n    if (response && redirect) {\n        const redirectURL = new NextURL(redirect, {\n            forceLocale: false,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        /**\n     * Responses created from redirects have immutable headers so we have\n     * to clone the response to be able to modify it.\n     */ response = new Response(response.body, response);\n        if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE) {\n            if (redirectURL.host === request.nextUrl.host) {\n                redirectURL.buildId = buildId || redirectURL.buildId;\n                response.headers.set(\"Location\", String(redirectURL));\n            }\n        }\n        /**\n     * When the request is a data request we can't use the location header as\n     * it may end up with CORS error. Instead we map to an internal header so\n     * the client knows the destination.\n     */ if (isDataReq) {\n            response.headers.delete(\"Location\");\n            response.headers.set(\"x-nextjs-redirect\", relativizeURL(String(redirectURL), String(requestUrl)));\n        }\n    }\n    return {\n        response: response || NextResponse.next(),\n        waitUntil: Promise.all(event[waitUntilSymbol])\n    };\n}\nexport function blockUnallowedResponse(promise) {\n    if (process.env.__NEXT_ALLOW_MIDDLEWARE_RESPONSE_BODY) {\n        return promise;\n    }\n    return promise.then((result)=>{\n        var ref;\n        if ((ref = result.response) == null ? void 0 : ref.body) {\n            console.error(new Error(`A middleware can not alter response's body. Learn more: https://nextjs.org/docs/messages/returning-response-body-in-middleware`));\n            return {\n                ...result,\n                response: new Response(\"Internal Server Error\", {\n                    status: 500,\n                    statusText: \"Internal Server Error\"\n                })\n            };\n        }\n        return result;\n    });\n}\nfunction getUnsupportedModuleErrorMessage(module) {\n    // warning: if you change these messages, you must adjust how react-dev-overlay's middleware detects modules not found\n    return `The edge runtime does not support Node.js '${module}' module.\nLearn More: https://nextjs.org/docs/messages/node-module-in-edge-runtime`;\n}\nfunction __import_unsupported(moduleName) {\n    const proxy = new Proxy(function() {}, {\n        get (_obj, prop) {\n            if (prop === \"then\") {\n                return {};\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        construct () {\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        apply (_target, _this, args) {\n            if (typeof args[0] === \"function\") {\n                return args[0](proxy);\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        }\n    });\n    return new Proxy({}, {\n        get: ()=>proxy\n    });\n}\nexport function enhanceGlobals() {\n    // The condition is true when the \"process\" module is provided\n    if (process !== global.process) {\n        // prefer local process but global.process has correct \"env\"\n        process.env = global.process.env;\n        global.process = process;\n    }\n    // to allow building code that import but does not use node.js modules,\n    // webpack will expect this function to exist in global scope\n    Object.defineProperty(globalThis, \"__import_unsupported\", {\n        value: __import_unsupported,\n        enumerable: false,\n        configurable: false\n    });\n}\n\n//# sourceMappingURL=adapter.js.map","// runtime can't be in strict mode because a global variable is assign and maybe created.\n(self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || []).push([[671],{\n\n/***/ 74:\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var next_dist_esm_server_web_adapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(316);\n\n        \n\n        (0,next_dist_esm_server_web_adapter__WEBPACK_IMPORTED_MODULE_0__/* .enhanceGlobals */ .gL)()\n\n        var mod = __webpack_require__(249)\n        var handler = mod.middleware || mod.default;\n\n        if (typeof handler !== 'function') {\n          throw new Error('The Edge Function \"pages/api/subscribers\" must export a `default` function');\n        }\n\n        /* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(opts) {\n          return (0,next_dist_esm_server_web_adapter__WEBPACK_IMPORTED_MODULE_0__/* .adapter */ .VL)({\n              ...opts,\n              page: \"/api/subscribers\",\n              handler,\n          })\n        }\n    \n\n/***/ }),\n\n/***/ 249:\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"config\": () => (/* binding */ config),\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\nconst config = {\n    runtime: \"experimental-edge\"\n};\nasync function handler(req) {\n    const result = await fetch(\"https://www.getrevue.co/api/v2/subscribers\", {\n        method: \"GET\",\n        headers: {\n            Authorization: `Token ${process.env.REVUE_API_KEY}`\n        }\n    });\n    const data = await result.json();\n    if (!result.ok) {\n        return new Response(JSON.stringify({\n            error: \"Error retrieving subscribers\"\n        }), {\n            status: 500,\n            headers: {\n                \"content-type\": \"application/json\"\n            }\n        });\n    }\n    return new Response(JSON.stringify({\n        count: data.length\n    }), {\n        status: 200,\n        headers: {\n            \"content-type\": \"application/json\",\n            \"cache-control\": \"public, s-maxage=1200, stale-while-revalidate=600\"\n        }\n    });\n}\n\n\n/***/ }),\n\n/***/ 316:\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"VL\": () => (/* binding */ adapter),\n  \"gL\": () => (/* binding */ enhanceGlobals)\n});\n\n// UNUSED EXPORTS: blockUnallowedResponse\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/server/web/error.js\nclass PageSignatureError extends Error {\n    constructor({ page  }){\n        super(`The middleware \"${page}\" accepts an async API directly with the form:\n  \n  export function middleware(request, event) {\n    return NextResponse.redirect('/new-location')\n  }\n  \n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  `);\n    }\n}\nclass RemovedPageError extends Error {\n    constructor(){\n        super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  `);\n    }\n}\nclass RemovedUAError extends Error {\n    constructor(){\n        super(`The request.ua has been removed in favour of \\`userAgent\\` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  `);\n    }\n}\n\n//# sourceMappingURL=error.js.map\n;// CONCATENATED MODULE: ./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/server/web/utils.js\nfunction fromNodeHeaders(object) {\n    const headers = new Headers();\n    for (let [key, value] of Object.entries(object)){\n        const values = Array.isArray(value) ? value : [\n            value\n        ];\n        for (let v of values){\n            if (v !== undefined) {\n                headers.append(key, v);\n            }\n        }\n    }\n    return headers;\n}\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/ function splitCookiesString(cookiesString) {\n    var cookiesStrings = [];\n    var pos = 0;\n    var start;\n    var ch;\n    var lastComma;\n    var nextStart;\n    var cookiesSeparatorFound;\n    function skipWhitespace() {\n        while(pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))){\n            pos += 1;\n        }\n        return pos < cookiesString.length;\n    }\n    function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n    }\n    while(pos < cookiesString.length){\n        start = pos;\n        cookiesSeparatorFound = false;\n        while(skipWhitespace()){\n            ch = cookiesString.charAt(pos);\n            if (ch === \",\") {\n                // ',' is a cookie separator if we have later first '=', not ';' or ','\n                lastComma = pos;\n                pos += 1;\n                skipWhitespace();\n                nextStart = pos;\n                while(pos < cookiesString.length && notSpecialChar()){\n                    pos += 1;\n                }\n                // currently special character\n                if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n                    // we found cookies separator\n                    cookiesSeparatorFound = true;\n                    // pos is inside the next cookie, so back up and return it.\n                    pos = nextStart;\n                    cookiesStrings.push(cookiesString.substring(start, lastComma));\n                    start = pos;\n                } else {\n                    // in param ',' or param separator ';',\n                    // we continue from that comma\n                    pos = lastComma + 1;\n                }\n            } else {\n                pos += 1;\n            }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n            cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n    }\n    return cookiesStrings;\n}\nfunction toNodeHeaders(headers) {\n    const result = {};\n    if (headers) {\n        for (const [key, value] of headers.entries()){\n            result[key] = value;\n            if (key.toLowerCase() === \"set-cookie\") {\n                result[key] = splitCookiesString(value);\n            }\n        }\n    }\n    return result;\n}\n/**\n * Validate the correctness of a user-provided URL.\n */ function validateURL(url) {\n    try {\n        return String(new URL(String(url)));\n    } catch (error) {\n        throw new Error(`URL is malformed \"${String(url)}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`, {\n            cause: error\n        });\n    }\n}\n\n//# sourceMappingURL=utils.js.map\n;// CONCATENATED MODULE: ./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js\n\nconst responseSymbol = Symbol(\"response\");\nconst passThroughSymbol = Symbol(\"passThrough\");\nconst waitUntilSymbol = Symbol(\"waitUntil\");\nclass FetchEvent {\n    [waitUntilSymbol] = [];\n    [passThroughSymbol] = false;\n    // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n    constructor(_request){}\n    respondWith(response) {\n        if (!this[responseSymbol]) {\n            this[responseSymbol] = Promise.resolve(response);\n        }\n    }\n    passThroughOnException() {\n        this[passThroughSymbol] = true;\n    }\n    waitUntil(promise) {\n        this[waitUntilSymbol].push(promise);\n    }\n}\nclass NextFetchEvent extends FetchEvent {\n    constructor(params){\n        super(params.request);\n        this.sourcePage = params.page;\n    }\n    /**\n   * @deprecated The `request` is now the first parameter and the API is now async.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ get request() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    /**\n   * @deprecated Using `respondWith` is no longer needed.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ respondWith() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n}\n\n//# sourceMappingURL=fetch-event.js.map\n;// CONCATENATED MODULE: ./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js\nfunction detectDomainLocale(domainItems, hostname, detectedLocale) {\n    let domainItem;\n    if (domainItems) {\n        if (detectedLocale) {\n            detectedLocale = detectedLocale.toLowerCase();\n        }\n        for (const item of domainItems){\n            var ref, ref1;\n            // remove port if present\n            const domainHostname = (ref = item.domain) == null ? void 0 : ref.split(\":\")[0].toLowerCase();\n            if (hostname === domainHostname || detectedLocale === item.defaultLocale.toLowerCase() || ((ref1 = item.locales) == null ? void 0 : ref1.some((locale)=>locale.toLowerCase() === detectedLocale))) {\n                domainItem = item;\n                break;\n            }\n        }\n    }\n    return domainItem;\n} //# sourceMappingURL=detect-domain-locale.js.map\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js\n/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */ function removeTrailingSlash(route) {\n    return route.replace(/\\/$/, \"\") || \"/\";\n} //# sourceMappingURL=remove-trailing-slash.js.map\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js\n/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */ function parsePath(path) {\n    const hashIndex = path.indexOf(\"#\");\n    const queryIndex = path.indexOf(\"?\");\n    const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex);\n    if (hasQuery || hashIndex > -1) {\n        return {\n            pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n            query: hasQuery ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined) : \"\",\n            hash: hashIndex > -1 ? path.slice(hashIndex) : \"\"\n        };\n    }\n    return {\n        pathname: path,\n        query: \"\",\n        hash: \"\"\n    };\n} //# sourceMappingURL=parse-path.js.map\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js\n\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */ function addPathPrefix(path, prefix) {\n    if (!path.startsWith(\"/\") || !prefix) {\n        return path;\n    }\n    const { pathname , query , hash  } = parsePath(path);\n    return `${prefix}${pathname}${query}${hash}`;\n} //# sourceMappingURL=add-path-prefix.js.map\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js\n\n/**\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\n * provided path. It also works only for paths ensuring the argument starts\n * with a slash.\n */ function addPathSuffix(path, suffix) {\n    if (!path.startsWith(\"/\") || !suffix) {\n        return path;\n    }\n    const { pathname , query , hash  } = parsePath(path);\n    return `${pathname}${suffix}${query}${hash}`;\n} //# sourceMappingURL=add-path-suffix.js.map\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js\n\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */ function pathHasPrefix(path, prefix) {\n    if (typeof path !== \"string\") {\n        return false;\n    }\n    const { pathname  } = parsePath(path);\n    return pathname === prefix || pathname.startsWith(prefix + \"/\");\n} //# sourceMappingURL=path-has-prefix.js.map\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js\n\n\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */ function addLocale(path, locale, defaultLocale, ignorePrefix) {\n    if (locale && locale !== defaultLocale && (ignorePrefix || !pathHasPrefix(path.toLowerCase(), `/${locale.toLowerCase()}`) && !pathHasPrefix(path.toLowerCase(), \"/api\"))) {\n        return addPathPrefix(path, `/${locale}`);\n    }\n    return path;\n} //# sourceMappingURL=add-locale.js.map\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js\n\n\n\n\nfunction formatNextPathnameInfo(info) {\n    let pathname = addLocale(info.pathname, info.locale, info.buildId ? undefined : info.defaultLocale, info.ignorePrefix);\n    if (info.buildId || !info.trailingSlash) {\n        pathname = removeTrailingSlash(pathname);\n    }\n    if (info.buildId) {\n        pathname = addPathSuffix(addPathPrefix(pathname, `/_next/data/${info.buildId}`), info.pathname === \"/\" ? \"index.json\" : \".json\");\n    }\n    pathname = addPathPrefix(pathname, info.basePath);\n    return !info.buildId && info.trailingSlash ? !pathname.endsWith(\"/\") ? addPathSuffix(pathname, \"/\") : pathname : removeTrailingSlash(pathname);\n} //# sourceMappingURL=format-next-pathname-info.js.map\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/shared/lib/get-hostname.js\n/**\n * Takes an object with a hostname property (like a parsed URL) and some\n * headers that may contain Host and returns the preferred hostname.\n * @param parsed An object containing a hostname property.\n * @param headers A dictionary with headers containing a `host`.\n */ function getHostname(parsed, headers) {\n    var ref;\n    return (ref = !Array.isArray(headers == null ? void 0 : headers.host) && (headers == null ? void 0 : headers.host) || parsed.hostname) == null ? void 0 : ref.split(\":\")[0].toLowerCase();\n} //# sourceMappingURL=get-hostname.js.map\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js\n/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */ function normalizeLocalePath(pathname, locales) {\n    let detectedLocale;\n    // first item will be empty string from splitting at first char\n    const pathnameParts = pathname.split(\"/\");\n    (locales || []).some((locale)=>{\n        if (pathnameParts[1] && pathnameParts[1].toLowerCase() === locale.toLowerCase()) {\n            detectedLocale = locale;\n            pathnameParts.splice(1, 1);\n            pathname = pathnameParts.join(\"/\") || \"/\";\n            return true;\n        }\n        return false;\n    });\n    return {\n        pathname,\n        detectedLocale\n    };\n} //# sourceMappingURL=normalize-locale-path.js.map\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js\n\n/**\n * Given a path and a prefix it will remove the prefix when it exists in the\n * given path. It ensures it matches exactly without containing extra chars\n * and if the prefix is not there it will be noop.\n * @param path The path to remove the prefix from.\n * @param prefix The prefix to be removed.\n */ function removePathPrefix(path, prefix) {\n    if (pathHasPrefix(path, prefix)) {\n        const withoutPrefix = path.slice(prefix.length);\n        return withoutPrefix.startsWith(\"/\") ? withoutPrefix : `/${withoutPrefix}`;\n    }\n    return path;\n} //# sourceMappingURL=remove-path-prefix.js.map\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js\n\n\n\nfunction getNextPathnameInfo(pathname, options) {\n    var _nextConfig;\n    const { basePath , i18n , trailingSlash  } = (_nextConfig = options.nextConfig) != null ? _nextConfig : {};\n    const info = {\n        pathname: pathname,\n        trailingSlash: pathname !== \"/\" ? pathname.endsWith(\"/\") : trailingSlash\n    };\n    if (basePath && pathHasPrefix(info.pathname, basePath)) {\n        info.pathname = removePathPrefix(info.pathname, basePath);\n        info.basePath = basePath;\n    }\n    if (options.parseData === true && info.pathname.startsWith(\"/_next/data/\") && info.pathname.endsWith(\".json\")) {\n        const paths = info.pathname.replace(/^\\/_next\\/data\\//, \"\").replace(/\\.json$/, \"\").split(\"/\");\n        const buildId = paths[0];\n        info.pathname = paths[1] !== \"index\" ? `/${paths.slice(1).join(\"/\")}` : \"/\";\n        info.buildId = buildId;\n    }\n    if (i18n) {\n        const pathLocale = normalizeLocalePath(info.pathname, i18n.locales);\n        info.locale = pathLocale == null ? void 0 : pathLocale.detectedLocale;\n        info.pathname = (pathLocale == null ? void 0 : pathLocale.pathname) || info.pathname;\n    }\n    return info;\n} //# sourceMappingURL=get-next-pathname-info.js.map\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/server/web/next-url.js\n\n\n\n\nconst REGEX_LOCALHOST_HOSTNAME = /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|::1|localhost)/;\nfunction parseURL(url, base) {\n    return new URL(String(url).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"), base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"));\n}\nconst Internal = Symbol(\"NextURLInternal\");\nclass NextURL {\n    constructor(input, baseOrOpts, opts){\n        let base;\n        let options;\n        if (typeof baseOrOpts === \"object\" && \"pathname\" in baseOrOpts || typeof baseOrOpts === \"string\") {\n            base = baseOrOpts;\n            options = opts || {};\n        } else {\n            options = opts || baseOrOpts || {};\n        }\n        this[Internal] = {\n            url: parseURL(input, base ?? options.base),\n            options: options,\n            basePath: \"\"\n        };\n        this.analyzeUrl();\n    }\n    analyzeUrl() {\n        var ref, ref1, ref2, ref3, ref4;\n        const pathnameInfo = getNextPathnameInfo(this[Internal].url.pathname, {\n            nextConfig: this[Internal].options.nextConfig,\n            parseData: !undefined\n        });\n        this[Internal].domainLocale = detectDomainLocale((ref = this[Internal].options.nextConfig) == null ? void 0 : (ref1 = ref.i18n) == null ? void 0 : ref1.domains, getHostname(this[Internal].url, this[Internal].options.headers));\n        const defaultLocale = ((ref2 = this[Internal].domainLocale) == null ? void 0 : ref2.defaultLocale) || ((ref3 = this[Internal].options.nextConfig) == null ? void 0 : (ref4 = ref3.i18n) == null ? void 0 : ref4.defaultLocale);\n        this[Internal].url.pathname = pathnameInfo.pathname;\n        this[Internal].defaultLocale = defaultLocale;\n        this[Internal].basePath = pathnameInfo.basePath ?? \"\";\n        this[Internal].buildId = pathnameInfo.buildId;\n        this[Internal].locale = pathnameInfo.locale ?? defaultLocale;\n        this[Internal].trailingSlash = pathnameInfo.trailingSlash;\n    }\n    formatPathname() {\n        return formatNextPathnameInfo({\n            basePath: this[Internal].basePath,\n            buildId: this[Internal].buildId,\n            defaultLocale: !this[Internal].options.forceLocale ? this[Internal].defaultLocale : undefined,\n            locale: this[Internal].locale,\n            pathname: this[Internal].url.pathname,\n            trailingSlash: this[Internal].trailingSlash\n        });\n    }\n    formatSearch() {\n        return this[Internal].url.search;\n    }\n    get buildId() {\n        return this[Internal].buildId;\n    }\n    set buildId(buildId) {\n        this[Internal].buildId = buildId;\n    }\n    get locale() {\n        return this[Internal].locale ?? \"\";\n    }\n    set locale(locale) {\n        var ref, ref5;\n        if (!this[Internal].locale || !((ref = this[Internal].options.nextConfig) == null ? void 0 : (ref5 = ref.i18n) == null ? void 0 : ref5.locales.includes(locale))) {\n            throw new TypeError(`The NextURL configuration includes no locale \"${locale}\"`);\n        }\n        this[Internal].locale = locale;\n    }\n    get defaultLocale() {\n        return this[Internal].defaultLocale;\n    }\n    get domainLocale() {\n        return this[Internal].domainLocale;\n    }\n    get searchParams() {\n        return this[Internal].url.searchParams;\n    }\n    get host() {\n        return this[Internal].url.host;\n    }\n    set host(value) {\n        this[Internal].url.host = value;\n    }\n    get hostname() {\n        return this[Internal].url.hostname;\n    }\n    set hostname(value) {\n        this[Internal].url.hostname = value;\n    }\n    get port() {\n        return this[Internal].url.port;\n    }\n    set port(value) {\n        this[Internal].url.port = value;\n    }\n    get protocol() {\n        return this[Internal].url.protocol;\n    }\n    set protocol(value) {\n        this[Internal].url.protocol = value;\n    }\n    get href() {\n        const pathname = this.formatPathname();\n        const search = this.formatSearch();\n        return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`;\n    }\n    set href(url) {\n        this[Internal].url = parseURL(url);\n        this.analyzeUrl();\n    }\n    get origin() {\n        return this[Internal].url.origin;\n    }\n    get pathname() {\n        return this[Internal].url.pathname;\n    }\n    set pathname(value) {\n        this[Internal].url.pathname = value;\n    }\n    get hash() {\n        return this[Internal].url.hash;\n    }\n    set hash(value) {\n        this[Internal].url.hash = value;\n    }\n    get search() {\n        return this[Internal].url.search;\n    }\n    set search(value) {\n        this[Internal].url.search = value;\n    }\n    get password() {\n        return this[Internal].url.password;\n    }\n    set password(value) {\n        this[Internal].url.password = value;\n    }\n    get username() {\n        return this[Internal].url.username;\n    }\n    set username(value) {\n        this[Internal].url.username = value;\n    }\n    get basePath() {\n        return this[Internal].basePath;\n    }\n    set basePath(value) {\n        this[Internal].basePath = value.startsWith(\"/\") ? value : `/${value}`;\n    }\n    toString() {\n        return this.href;\n    }\n    toJSON() {\n        return this.href;\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            href: this.href,\n            origin: this.origin,\n            protocol: this.protocol,\n            username: this.username,\n            password: this.password,\n            host: this.host,\n            hostname: this.hostname,\n            port: this.port,\n            pathname: this.pathname,\n            search: this.search,\n            searchParams: this.searchParams,\n            hash: this.hash\n        };\n    }\n    clone() {\n        return new NextURL(String(this), this[Internal].options);\n    }\n}\n\n//# sourceMappingURL=next-url.js.map\n;// CONCATENATED MODULE: ./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/server/web/spec-extension/cookies/serialize.js\nconst SAME_SITE = [\n    \"strict\",\n    \"lax\",\n    \"none\"\n];\nfunction parseSameSite(string) {\n    string = string.toLowerCase();\n    return SAME_SITE.includes(string) ? string : undefined;\n}\nfunction compact(t) {\n    const newT = {};\n    for(const key in t){\n        if (t[key]) {\n            newT[key] = t[key];\n        }\n    }\n    return newT;\n}\nfunction serialize(c) {\n    const attrs = [\n        \"path\" in c && c.path && `Path=${c.path}`,\n        \"expires\" in c && c.expires && `Expires=${c.expires.toUTCString()}`,\n        \"maxAge\" in c && c.maxAge && `Max-Age=${c.maxAge}`,\n        \"domain\" in c && c.domain && `Domain=${c.domain}`,\n        \"secure\" in c && c.secure && \"Secure\",\n        \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n        \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`, \n    ].filter(Boolean);\n    return `${c.name}=${encodeURIComponent(c.value ?? \"\")}; ${attrs.join(\"; \")}`;\n}\n/**\n * Parse a `Cookie` or `Set-Cookie header value\n */ function parseCookieString(cookie) {\n    const map = new Map();\n    for (const pair of cookie.split(/; */)){\n        if (!pair) continue;\n        const [key, value] = pair.split(\"=\", 2);\n        map.set(key, decodeURIComponent(value ?? \"true\"));\n    }\n    return map;\n}\n/**\n * Parse a `Set-Cookie` header value\n */ function parseSetCookieString(setCookie) {\n    if (!setCookie) {\n        return undefined;\n    }\n    const [[name, value], ...attributes] = parseCookieString(setCookie);\n    const { domain , expires , httponly , maxage , path , samesite , secure  } = Object.fromEntries(attributes.map(([key, v])=>[\n            key.toLowerCase(),\n            v\n        ]));\n    const cookie = {\n        name,\n        value: decodeURIComponent(value),\n        domain,\n        ...expires && {\n            expires: new Date(expires)\n        },\n        ...httponly && {\n            httpOnly: true\n        },\n        ...typeof maxage === \"string\" && {\n            maxAge: Number(maxage)\n        },\n        path,\n        ...samesite && {\n            sameSite: parseSameSite(samesite)\n        },\n        ...secure && {\n            secure: true\n        }\n    };\n    return compact(cookie);\n}\n\n//# sourceMappingURL=serialize.js.map\n;// CONCATENATED MODULE: ./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/server/web/spec-extension/cookies/request-cookies.js\n\n/**\n * A class for manipulating {@link Request} cookies (`Cookie` header).\n */ class RequestCookies {\n    _parsed = new Map();\n    constructor(requestHeaders){\n        this._headers = requestHeaders;\n        const header = requestHeaders.get(\"cookie\");\n        if (header) {\n            const parsed = parseCookieString(header);\n            for (const [name, value] of parsed){\n                this._parsed.set(name, {\n                    name,\n                    value\n                });\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this._parsed[Symbol.iterator]();\n    }\n    /**\n   * The amount of cookies received from the client\n   */ get size() {\n        return this._parsed.size;\n    }\n    get(...args) {\n        const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n        return this._parsed.get(name);\n    }\n    getAll(...args) {\n        var ref;\n        const all = Array.from(this._parsed);\n        if (!args.length) {\n            return all.map(([_, value])=>value);\n        }\n        const name = typeof args[0] === \"string\" ? args[0] : (ref = args[0]) == null ? void 0 : ref.name;\n        return all.filter(([n])=>n === name).map(([_, value])=>value);\n    }\n    has(name) {\n        return this._parsed.has(name);\n    }\n    set(...args) {\n        const [name, value] = args.length === 1 ? [\n            args[0].name,\n            args[0].value\n        ] : args;\n        const map = this._parsed;\n        map.set(name, {\n            name,\n            value\n        });\n        this._headers.set(\"cookie\", Array.from(map).map(([_, v])=>serialize(v)).join(\"; \"));\n        return this;\n    }\n    /**\n   * Delete the cookies matching the passed name or names in the request.\n   */ delete(/** Name or names of the cookies to be deleted  */ names) {\n        const map = this._parsed;\n        const result = !Array.isArray(names) ? map.delete(names) : names.map((name)=>map.delete(name));\n        this._headers.set(\"cookie\", Array.from(map).map(([_, value])=>serialize(value)).join(\"; \"));\n        return result;\n    }\n    /**\n   * Delete all the cookies in the cookies in the request.\n   */ clear() {\n        this.delete(Array.from(this._parsed.keys()));\n        return this;\n    }\n    /**\n   * Format the cookies in the request as a string for logging\n   */ [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n    }\n}\n\n//# sourceMappingURL=request-cookies.js.map\n;// CONCATENATED MODULE: ./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/server/web/spec-extension/cookies/response-cookies.js\n\nfunction replace(bag, headers) {\n    headers.delete(\"set-cookie\");\n    for (const [, value] of bag){\n        const serialized = serialize(value);\n        headers.append(\"set-cookie\", serialized);\n    }\n}\nfunction normalizeCookie(cookie = {\n    name: \"\",\n    value: \"\"\n}) {\n    if (cookie.maxAge) {\n        cookie.expires = new Date(Date.now() + cookie.maxAge * 1000);\n    }\n    if (cookie.path === null || cookie.path === undefined) {\n        cookie.path = \"/\";\n    }\n    return cookie;\n}\n/**\n * A class for manipulating {@link Response} cookies (`Set-Cookie` header).\n * Loose implementation of the experimental [Cookie Store API](https://wicg.github.io/cookie-store/#dictdef-cookie)\n * The main difference is `ResponseCookies` methods do not return a Promise.\n */ class ResponseCookies {\n    _parsed = new Map();\n    constructor(responseHeaders){\n        this._headers = responseHeaders;\n        // @ts-expect-error See https://github.com/whatwg/fetch/issues/973\n        const headers = this._headers.getAll(\"set-cookie\");\n        for (const header of headers){\n            const parsed = parseSetCookieString(header);\n            if (parsed) {\n                this._parsed.set(parsed.name, parsed);\n            }\n        }\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-get CookieStore#get} without the Promise.\n   */ get(...args) {\n        const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n        return this._parsed.get(key);\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-getAll CookieStore#getAll} without the Promise.\n   */ getAll(...args) {\n        var ref;\n        const all = Array.from(this._parsed.values());\n        if (!args.length) {\n            return all;\n        }\n        const key = typeof args[0] === \"string\" ? args[0] : (ref = args[0]) == null ? void 0 : ref.name;\n        return all.filter((c)=>c.name === key);\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-set CookieStore#set} without the Promise.\n   */ set(...args) {\n        const [name, value, cookie] = args.length === 1 ? [\n            args[0].name,\n            args[0].value,\n            args[0]\n        ] : args;\n        const map = this._parsed;\n        map.set(name, normalizeCookie({\n            name,\n            value,\n            ...cookie\n        }));\n        replace(map, this._headers);\n        return this;\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-delete CookieStore#delete} without the Promise.\n   */ delete(...args) {\n        const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n        return this.set({\n            name,\n            value: \"\",\n            expires: new Date(0)\n        });\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n    }\n}\n\n//# sourceMappingURL=response-cookies.js.map\n;// CONCATENATED MODULE: ./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/server/web/spec-extension/cookies/index.js\n\n\n\n//# sourceMappingURL=index.js.map\n;// CONCATENATED MODULE: ./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/server/web/spec-extension/request.js\n\n\n\n\nconst INTERNALS = Symbol(\"internal request\");\nclass NextRequest extends Request {\n    constructor(input, init = {}){\n        const url = typeof input !== \"string\" && \"url\" in input ? input.url : String(input);\n        validateURL(url);\n        super(url, init);\n        this[INTERNALS] = {\n            cookies: new RequestCookies(this.headers),\n            geo: init.geo || {},\n            ip: init.ip,\n            url: new NextURL(url, {\n                headers: toNodeHeaders(this.headers),\n                nextConfig: init.nextConfig\n            })\n        };\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            cookies: this.cookies,\n            geo: this.geo,\n            ip: this.ip,\n            nextUrl: this.nextUrl,\n            url: this.url,\n            // rest of props come from Request\n            bodyUsed: this.bodyUsed,\n            cache: this.cache,\n            credentials: this.credentials,\n            destination: this.destination,\n            headers: Object.fromEntries(this.headers),\n            integrity: this.integrity,\n            keepalive: this.keepalive,\n            method: this.method,\n            mode: this.mode,\n            redirect: this.redirect,\n            referrer: this.referrer,\n            referrerPolicy: this.referrerPolicy,\n            signal: this.signal\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    get geo() {\n        return this[INTERNALS].geo;\n    }\n    get ip() {\n        return this[INTERNALS].ip;\n    }\n    get nextUrl() {\n        return this[INTERNALS].url;\n    }\n    /**\n   * @deprecated\n   * `page` has been deprecated in favour of `URLPattern`.\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\n   */ get page() {\n        throw new RemovedPageError();\n    }\n    /**\n   * @deprecated\n   * `ua` has been removed in favour of \\`userAgent\\` function.\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n   */ get ua() {\n        throw new RemovedUAError();\n    }\n    get url() {\n        return this[INTERNALS].url.toString();\n    }\n}\n\n//# sourceMappingURL=request.js.map\n;// CONCATENATED MODULE: ./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/server/web/spec-extension/response.js\n\n\n\nconst response_INTERNALS = Symbol(\"internal response\");\nconst REDIRECTS = new Set([\n    301,\n    302,\n    303,\n    307,\n    308\n]);\nfunction handleMiddlewareField(init, headers) {\n    var ref;\n    if (init == null ? void 0 : (ref = init.request) == null ? void 0 : ref.headers) {\n        if (!(init.request.headers instanceof Headers)) {\n            throw new Error(\"request.headers must be an instance of Headers\");\n        }\n        const keys = [];\n        for (const [key, value] of init.request.headers){\n            headers.set(\"x-middleware-request-\" + key, value);\n            keys.push(key);\n        }\n        headers.set(\"x-middleware-override-headers\", keys.join(\",\"));\n    }\n}\nclass NextResponse extends Response {\n    constructor(body, init = {}){\n        super(body, init);\n        this[response_INTERNALS] = {\n            cookies: new ResponseCookies(this.headers),\n            url: init.url ? new NextURL(init.url, {\n                headers: toNodeHeaders(this.headers),\n                nextConfig: init.nextConfig\n            }) : undefined\n        };\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            cookies: this.cookies,\n            url: this.url,\n            // rest of props come from Response\n            body: this.body,\n            bodyUsed: this.bodyUsed,\n            headers: Object.fromEntries(this.headers),\n            ok: this.ok,\n            redirected: this.redirected,\n            status: this.status,\n            statusText: this.statusText,\n            type: this.type\n        };\n    }\n    get cookies() {\n        return this[response_INTERNALS].cookies;\n    }\n    static json(body, init) {\n        // @ts-expect-error This is not in lib/dom right now, and we can't augment it.\n        const response = Response.json(body, init);\n        return new NextResponse(response.body, response);\n    }\n    static redirect(url, init) {\n        const status = typeof init === \"number\" ? init : (init == null ? void 0 : init.status) ?? 307;\n        if (!REDIRECTS.has(status)) {\n            throw new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n        }\n        const initObj = typeof init === \"object\" ? init : {};\n        const headers = new Headers(initObj == null ? void 0 : initObj.headers);\n        headers.set(\"Location\", validateURL(url));\n        return new NextResponse(null, {\n            ...initObj,\n            headers,\n            status\n        });\n    }\n    static rewrite(destination, init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-rewrite\", validateURL(destination));\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n    static next(init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-next\", \"1\");\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n}\n\n//# sourceMappingURL=response.js.map\n;// CONCATENATED MODULE: ./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js\n/**\n * Given a URL as a string and a base URL it will make the URL relative\n * if the parsed protocol and host is the same as the one in the base\n * URL. Otherwise it returns the same URL string.\n */ function relativizeURL(url, base) {\n    const baseURL = typeof base === \"string\" ? new URL(base) : base;\n    const relative = new URL(url, base);\n    const origin = `${baseURL.protocol}//${baseURL.host}`;\n    return `${relative.protocol}//${relative.host}` === origin ? relative.toString().replace(origin, \"\") : relative.toString();\n} //# sourceMappingURL=relativize-url.js.map\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/server/internal-utils.js\nconst INTERNAL_QUERY_NAMES = [\n    \"__nextFallback\",\n    \"__nextLocale\",\n    \"__nextDefaultLocale\",\n    \"__nextIsNotFound\",\n    // RSC\n    \"__rsc__\",\n    // Routing\n    \"__next_router_state_tree__\",\n    \"__next_router_prefetch__\", \n];\nconst EXTENDED_INTERNAL_QUERY_NAMES = [\n    \"__nextDataReq\"\n];\nfunction stripInternalQueries(query) {\n    for (const name of INTERNAL_QUERY_NAMES){\n        delete query[name];\n    }\n}\nfunction stripInternalSearchParams(searchParams, extended) {\n    for (const name of INTERNAL_QUERY_NAMES){\n        searchParams.delete(name);\n    }\n    if (extended) {\n        for (const name of EXTENDED_INTERNAL_QUERY_NAMES){\n            searchParams.delete(name);\n        }\n    }\n    return searchParams;\n}\n\n//# sourceMappingURL=internal-utils.js.map\n;// CONCATENATED MODULE: ./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js\n// remove (name) from pathname as it's not considered for routing\nfunction normalizeAppPath(pathname) {\n    return pathname.split(\"/\").reduce((acc, segment, index, segments)=>{\n        // Empty segments are ignored.\n        if (!segment) {\n            return acc;\n        }\n        if (segment.startsWith(\"(\") && segment.endsWith(\")\")) {\n            return acc;\n        }\n        if (segment.startsWith(\"@\")) {\n            return acc;\n        }\n        if (segment === \"page\" && index === segments.length - 1) {\n            return acc;\n        }\n        return acc + `/${segment}`;\n    }, \"\");\n}\nfunction normalizeRscPath(pathname, enabled) {\n    return enabled ? pathname.replace(/\\.rsc($|\\?)/, \"\") : pathname;\n} //# sourceMappingURL=app-paths.js.map\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/next@13.0.2_qtpcxnaaarbm4ws7ughq6oxfve/node_modules/next/dist/esm/server/web/adapter.js\n\n\n\n\n\n\n\n\n\n\nclass NextRequestHint extends NextRequest {\n    constructor(params){\n        super(params.input, params.init);\n        this.sourcePage = params.page;\n    }\n    get request() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    respondWith() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    waitUntil() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n}\nconst FLIGHT_PARAMETERS = [\n    \"__rsc__\",\n    \"__next_router_state_tree__\",\n    \"__next_router_prefetch__\", \n];\nasync function adapter(params) {\n    // TODO-APP: use explicit marker for this\n    const isEdgeRendering = typeof self.__BUILD_MANIFEST !== \"undefined\";\n    params.request.url = normalizeRscPath(params.request.url, true);\n    const requestUrl = new NextURL(params.request.url, {\n        headers: params.request.headers,\n        nextConfig: params.request.nextConfig\n    });\n    // Ensure users only see page requests, never data requests.\n    const buildId = requestUrl.buildId;\n    requestUrl.buildId = \"\";\n    const isDataReq = params.request.headers[\"x-nextjs-data\"];\n    if (isDataReq && requestUrl.pathname === \"/index\") {\n        requestUrl.pathname = \"/\";\n    }\n    const requestHeaders = fromNodeHeaders(params.request.headers);\n    // Parameters should only be stripped for middleware\n    if (!isEdgeRendering) {\n        for (const param of FLIGHT_PARAMETERS){\n            requestHeaders.delete(param);\n        }\n    }\n    // Strip internal query parameters off the request.\n    stripInternalSearchParams(requestUrl.searchParams, true);\n    const request = new NextRequestHint({\n        page: params.page,\n        input: String(requestUrl),\n        init: {\n            body: params.request.body,\n            geo: params.request.geo,\n            headers: requestHeaders,\n            ip: params.request.ip,\n            method: params.request.method,\n            nextConfig: params.request.nextConfig\n        }\n    });\n    /**\n   * This allows to identify the request as a data request. The user doesn't\n   * need to know about this property neither use it. We add it for testing\n   * purposes.\n   */ if (isDataReq) {\n        Object.defineProperty(request, \"__isData\", {\n            enumerable: false,\n            value: true\n        });\n    }\n    const event = new NextFetchEvent({\n        request,\n        page: params.page\n    });\n    let response = await params.handler(request, event);\n    // check if response is a Response object\n    if (response && !(response instanceof Response)) {\n        throw new TypeError(\"Expected an instance of Response to be returned\");\n    }\n    /**\n   * For rewrites we must always include the locale in the final pathname\n   * so we re-create the NextURL forcing it to include it when the it is\n   * an internal rewrite. Also we make sure the outgoing rewrite URL is\n   * a data URL if the request was a data request.\n   */ const rewrite = response == null ? void 0 : response.headers.get(\"x-middleware-rewrite\");\n    if (response && rewrite) {\n        const rewriteUrl = new NextURL(rewrite, {\n            forceLocale: true,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        if (true) {\n            if (rewriteUrl.host === request.nextUrl.host) {\n                rewriteUrl.buildId = buildId || rewriteUrl.buildId;\n                response.headers.set(\"x-middleware-rewrite\", String(rewriteUrl));\n            }\n        }\n        /**\n     * When the request is a data request we must show if there was a rewrite\n     * with an internal header so the client knows which component to load\n     * from the data request.\n     */ if (isDataReq) {\n            response.headers.set(\"x-nextjs-rewrite\", relativizeURL(String(rewriteUrl), String(requestUrl)));\n        }\n    }\n    /**\n   * For redirects we will not include the locale in case when it is the\n   * default and we must also make sure the outgoing URL is a data one if\n   * the incoming request was a data request.\n   */ const redirect = response == null ? void 0 : response.headers.get(\"Location\");\n    if (response && redirect) {\n        const redirectURL = new NextURL(redirect, {\n            forceLocale: false,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        /**\n     * Responses created from redirects have immutable headers so we have\n     * to clone the response to be able to modify it.\n     */ response = new Response(response.body, response);\n        if (true) {\n            if (redirectURL.host === request.nextUrl.host) {\n                redirectURL.buildId = buildId || redirectURL.buildId;\n                response.headers.set(\"Location\", String(redirectURL));\n            }\n        }\n        /**\n     * When the request is a data request we can't use the location header as\n     * it may end up with CORS error. Instead we map to an internal header so\n     * the client knows the destination.\n     */ if (isDataReq) {\n            response.headers.delete(\"Location\");\n            response.headers.set(\"x-nextjs-redirect\", relativizeURL(String(redirectURL), String(requestUrl)));\n        }\n    }\n    return {\n        response: response || NextResponse.next(),\n        waitUntil: Promise.all(event[waitUntilSymbol])\n    };\n}\nfunction blockUnallowedResponse(promise) {\n    if (false) {}\n    return promise.then((result)=>{\n        var ref;\n        if ((ref = result.response) == null ? void 0 : ref.body) {\n            console.error(new Error(`A middleware can not alter response's body. Learn more: https://nextjs.org/docs/messages/returning-response-body-in-middleware`));\n            return {\n                ...result,\n                response: new Response(\"Internal Server Error\", {\n                    status: 500,\n                    statusText: \"Internal Server Error\"\n                })\n            };\n        }\n        return result;\n    });\n}\nfunction getUnsupportedModuleErrorMessage(module) {\n    // warning: if you change these messages, you must adjust how react-dev-overlay's middleware detects modules not found\n    return `The edge runtime does not support Node.js '${module}' module.\nLearn More: https://nextjs.org/docs/messages/node-module-in-edge-runtime`;\n}\nfunction __import_unsupported(moduleName) {\n    const proxy = new Proxy(function() {}, {\n        get (_obj, prop) {\n            if (prop === \"then\") {\n                return {};\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        construct () {\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        apply (_target, _this, args) {\n            if (typeof args[0] === \"function\") {\n                return args[0](proxy);\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        }\n    });\n    return new Proxy({}, {\n        get: ()=>proxy\n    });\n}\nfunction enhanceGlobals() {\n    // The condition is true when the \"process\" module is provided\n    if (process !== __webpack_require__.g.process) {\n        // prefer local process but global.process has correct \"env\"\n        process.env = __webpack_require__.g.process.env;\n        __webpack_require__.g.process = process;\n    }\n    // to allow building code that import but does not use node.js modules,\n    // webpack will expect this function to exist in global scope\n    Object.defineProperty(globalThis, \"__import_unsupported\", {\n        value: __import_unsupported,\n        enumerable: false,\n        configurable: false\n    });\n}\n\n//# sourceMappingURL=adapter.js.map\n\n/***/ })\n\n},\n/******/ __webpack_require__ => { // webpackRuntimeModules\n/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))\n/******/ var __webpack_exports__ = (__webpack_exec__(74));\n/******/ (_ENTRIES = typeof _ENTRIES === \"undefined\" ? {} : _ENTRIES)[\"middleware_pages/api/subscribers\"] = __webpack_exports__;\n/******/ }\n]);"],"names":["self","push","__unused_webpack_module","__webpack_exports__","__webpack_require__","r","d","__WEBPACK_DEFAULT_EXPORT__","next_dist_esm_server_web_adapter__WEBPACK_IMPORTED_MODULE_0__","gL","mod","handler","middleware","default","opts","VL","page","config","runtime","req","result","fetch","method","headers","Authorization","process","env","REVUE_API_KEY","data","json","ok","Response","JSON","stringify","count","length","status","error","adapter","enhanceGlobals","PageSignatureError","Error","constructor","RemovedPageError","RemovedUAError","toNodeHeaders","key","value","entries","toLowerCase","splitCookiesString","cookiesString","start","ch","lastComma","nextStart","cookiesSeparatorFound","cookiesStrings","pos","skipWhitespace","test","charAt","substring","validateURL","url","String","URL","cause","responseSymbol","Symbol","passThroughSymbol","waitUntilSymbol","FetchEvent","_request","respondWith","response","Promise","resolve","passThroughOnException","waitUntil","promise","NextFetchEvent","params","request","sourcePage","removeTrailingSlash","route","replace","parsePath","path","hashIndex","indexOf","queryIndex","hasQuery","pathname","query","undefined","hash","slice","addPathPrefix","prefix","startsWith","addPathSuffix","suffix","pathHasPrefix","REGEX_LOCALHOST_HOSTNAME","parseURL","base","Internal","NextURL","input","baseOrOpts","options","basePath","analyzeUrl","ref","ref1","ref2","ref3","ref4","parsed","pathnameInfo","getNextPathnameInfo","_nextConfig","i18n","trailingSlash","nextConfig","info","endsWith","removePathPrefix","withoutPrefix","parseData","paths","split","buildId","join","pathLocale","normalizeLocalePath","locales","detectedLocale","pathnameParts","some","locale","splice","domainLocale","detectDomainLocale","domainItems","hostname","domainItem","item","domainHostname","domain","defaultLocale","domains","Array","isArray","host","formatPathname","ignorePrefix","forceLocale","formatSearch","search","ref5","includes","searchParams","port","protocol","href","origin","password","username","toString","toJSON","for","clone","SAME_SITE","serialize","c","attrs","expires","toUTCString","maxAge","secure","httpOnly","sameSite","filter","Boolean","name","encodeURIComponent","parseCookieString","cookie","map","Map","pair","set","decodeURIComponent","RequestCookies","_parsed","requestHeaders","_headers","header","get","iterator","size","args","getAll","all","from","_","n","has","v","delete","names","clear","keys","Object","fromEntries","ResponseCookies","responseHeaders","parseSetCookieString","setCookie","string","attributes","httponly","maxage","samesite","Date","Number","compact","t","newT","values","normalizeCookie","now","bag","serialized","append","INTERNALS","NextRequest","Request","init","cookies","geo","ip","nextUrl","bodyUsed","cache","credentials","destination","integrity","keepalive","mode","redirect","referrer","referrerPolicy","signal","ua","response_INTERNALS","REDIRECTS","Set","handleMiddlewareField","Headers","NextResponse","body","redirected","statusText","type","initObj","rewrite","next","relativizeURL","baseURL","relative","INTERNAL_QUERY_NAMES","EXTENDED_INTERNAL_QUERY_NAMES","NextRequestHint","FLIGHT_PARAMETERS","isEdgeRendering","__BUILD_MANIFEST","requestUrl","isDataReq","fromNodeHeaders","object","param","stripInternalSearchParams","extended","defineProperty","enumerable","event","rewriteUrl","redirectURL","getUnsupportedModuleErrorMessage","module","__import_unsupported","moduleName","proxy","Proxy","_obj","prop","construct","apply","_target","_this","g","globalThis","configurable","s","_ENTRIES"],"sourceRoot":""}